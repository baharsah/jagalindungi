version: 2
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build_yarn
      - build_android:
          requires:
            - build_yarn
      - publish-github-release:
          requires:
            - build_android

jobs:
  build_yarn:
    docker:
      - image: circleci/node:12-browsers
    steps:
      - checkout
      - restore_cache:
          name: Restore Node Modules Cache
          keys:
            - yarn-modules-{{ checksum "jagalindungi-front/yarn.lock" }}
      - run: cd jagalindungi-front && ls node_modules || yarn install --frozen-lockfile
      - save_cache:
          name: Save Node Modules Cache
          key: yarn-modules-{{ checksum "jagalindungi-front/yarn.lock" }}
          paths:
            - node_modules
      - run: cd jagalindungi-front && yarn build
      - run: cd jagalindungi-front && npx cap add android
      - run:  cd jagalindungi-front && npx cap sync
      - persist_to_workspace:
          root: jagalindungi-front/android
          paths:
            - ./*
  build_android:
    docker:
      - image: circleci/android:api-29-node
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: jagalindungi-front/android
      - run:
          name: Check working_directory
          command: ls
      - restore_cache:
          name: Restore Node Modules Cache
          keys:
            - yarn-modules-{{ checksum "jagalindungi-frontend/yarn.lock" }}
      - restore_cache:
          key: jars-{{ checksum "jagalindungi-front/android/build.gradle" }}-{{ checksum  "jagalindungi-front/android/build.gradle" }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x jagalindungi-front/android/gradlew
      - run:
          name: Download Dependencies
          command: cd jagalindungi-front/android && ./gradlew androidDependencies --debug
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "jagalindungi-frontend/android/build.gradle" }}-{{ checksum  "jagalindungi-frontend/android/build.gradle" }}
      - run:
          name: Copy configuration files
          command: cp config/Android/AndroidManifest.xml android/app/src/main/AndroidManifest.xml
      - run: # https://developer.android.com/studio/build/building-cmdline This creates an APK named module_name-debug.apk in project_name/module_name/build/outputs/apk/
          name: Build debug APK and release APK
          command: |
            cd jagalindungi-front/android
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleRelease
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Run Tests
          command: cd jagalindungi-front/android && ./gradlew lint test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: jagalindungi-front/android/app/build/reports
          destination: reports
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: jagalindungi-front/android/app/build/outputs/apk
      # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #     path: android/app/src/main/assets/public
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: jagalindungi-front/android/app/build/test-results
      - persist_to_workspace:
          root: jagalindungi-front/android/app/build/outputs
          paths:
            - ./apk/*

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: jagalindungi-front/android
      - run:
          name: 'Publish Release on GitHub'
          command: |
            mv android/apk/debug/app-debug.apk android/apk
            mv android/apk/release/app-release-unsigned.apk android/apk
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_BUILD_NUM} ./android/apk/
